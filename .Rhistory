menuSubItem(
text = "Bottom Area List",
tabName = "btm_area_tbl"
),
menuSubItem(
text = "Bottom Area Detail",
tabName = "bmt_area_dtl"
)),
selectizeInput(inputId = "bor",
label = "Boroughs to Show",
choices = boroughs,
selected = "All"
)
)
# numericInput(inputID = "min_pop", label = "Select Minimum Population Threshold",
#              value = 12000, min = 0, max = 50000, step = 2000
#                )
),
dashboardBody(
tabItems(
tabItem(tabName = "home",
fluidRow(p(
"Hi, welcome to my R Shiny project. This dashboared analyzes the pre-school ('Pre-K') in NYC.
NYC started the Pre-K program in 2014.
This analysis combines the latest census from 2010 then pre-school location as of 2018 to
identify areas where there are relatively fewer seats.
", style="text-align:center; font-family: times"
),
br(),
# a(href = "https://www.schools.nyc.gov/enrollment/enroll-grade-by-grade/pre-k"
#   , "Here",target="_blank")
# ,style="text-align:center;color:black")
p("For more information please check the",em("NYC's DOE"),"page by clicking",
br(),
a(href="https://www.schools.nyc.gov/enrollment/enroll-grade-by-grade/pre-k", "here",target="_blank")
,style="text-align:center;color:black")
,
width = 8
)
),
tabItem(tabName = "map",
fluidPage(
title = "NYC PK Map",
leafletOutput("nyc_pk_analysis", height = 600),
br(),
checkboxInput("show", "Highlight Lowest", value = FALSE),
DT::dataTableOutput("btm_lst")
)
),
tabItem(tabName = "chart",
fluidRow(box(
status = "primary",
width = 12,
plotOutput("nyc_seats_hist")
)),
fluidRow(
width = 12,
plotOutput("nyc_seats_box_by_bor")
)
),
tabItem(tabName = 'btm_area_tbl',
fluidRow(
box(width = 12,
DT::dataTableOutput("btm_nta"))
))
)
)
)
)
runApp('~/Jason/NYC Data Science Academy/projects/shiny/nyc_pk_schools/nyc_pk')
runApp('~/Jason/NYC Data Science Academy/projects/shiny/nyc_pk_schools/nyc_pk')
runApp('~/Jason/NYC Data Science Academy/projects/shiny/nyc_pk_schools/nyc_pk')
runApp('~/Jason/NYC Data Science Academy/projects/shiny/nyc_pk_schools/nyc_pk')
ggplot(data = map_and_pk_and_pop, mapping = aes(x = seats_per_1000)) +
geom_histogram(binwidth = 5, colour = "white", fill = "#1380A1") +
geom_hline(yintercept = 0, size = 1, colour = "#333333") +
bbc_style() +
scale_x_continuous(limits = c(0, 55),
breaks = seq(10, 50, by = 10),
labels = c("10", "20", "30", "40", "50 Seats")) +
labs(title = "How Available Seats Vary Across NYC",
subtitle = "Distribution of Pre-K Seats per 1000")
getwd()
setwd("~/Jason/NYC Data Science Academy/projects/shiny/nyc_pk_schools")
ggplot(data = map_and_pk_and_pop, mapping = aes(x = seats_per_1000)) +
geom_histogram(binwidth = 5, colour = "white", fill = "#1380A1") +
geom_hline(yintercept = 0, size = 1, colour = "#333333") +
bbc_style() +
scale_x_continuous(limits = c(0, 55),
breaks = seq(10, 50, by = 10),
labels = c("10", "20", "30", "40", "50 Seats")) +
labs(title = "How Available Seats Vary Across NYC",
subtitle = "Distribution of Pre-K Seats per 1000") %>%
ggsave(filename = "./presentations/bbc_hist_seats.png", plot = last_plot())
ggplot(data = map_and_pk_and_pop, mapping = aes(x = seats_per_1000)) +
geom_histogram(binwidth = 5, colour = "white", fill = "#1380A1") +
geom_hline(yintercept = 0, size = 1, colour = "#333333") +
bbc_style() +
scale_x_continuous(limits = c(0, 55),
breaks = seq(10, 50, by = 10),
labels = c("10", "20", "30", "40", "50 Seats")) +
labs(title = "How Available Seats Vary Across NYC",
subtitle = "Distribution of Pre-K Seats per 1000") %>%
ggsave(filename = "bbc_hist_seats.png", plot = last_plot(), path = "./presentations/")
ggplot(data = map_and_pk_and_pop, mapping = aes(x = seats_per_1000)) +
geom_histogram(binwidth = 5, colour = "white", fill = "#1380A1") +
geom_hline(yintercept = 0, size = 1, colour = "#333333") +
bbc_style() +
scale_x_continuous(limits = c(0, 55),
breaks = seq(10, 50, by = 10),
labels = c("10", "20", "30", "40", "50 Seats")) +
labs(title = "How Available Seats Vary Across NYC",
subtitle = "Distribution of Pre-K Seats per 1000") %>%
ggsave(filename = "bbc_hist_seats.png", plot = last_plot(), path = "./presentations/",
device = NULL)
last_plot()
ggplot(data = map_and_pk_and_pop, mapping = aes(x = seats_per_1000)) +
geom_histogram(binwidth = 5, colour = "white", fill = "#1380A1") +
geom_hline(yintercept = 0, size = 1, colour = "#333333") +
bbc_style() +
scale_x_continuous(limits = c(0, 55),
breaks = seq(10, 50, by = 10),
labels = c("10", "20", "30", "40", "50 Seats")) +
labs(title = "How Available Seats Vary Across NYC",
subtitle = "Distribution of Pre-K Seats per 1000")
last_plot()
ggsave(filename = "bbc_hist_seats.png", plot = last_plot(), path = "./presentations/",
device = NULL)
ggsave(filename = "bbc_hist_seats.png")
map_and_pk_and_pop %>%
ggplot(., mapping= aes(x = reorder(borough.y, seats_per_1000, median), y = seats_per_1000, fill = borough.y)) +
geom_boxplot()  +
ylab("Seats per 1000") +
xlab("") +
bbc_style()
map_and_pk_and_pop %>%
ggplot(., mapping= aes(x = reorder(borough.y, seats_per_1000, median), y = seats_per_1000, fill = borough.y)) +
geom_boxplot()  +
ylab("Seats per 1000") +
xlab("") +
bbc_style() +
theme(legend.position = "None") +
ggtitle("Seat Distribution Across NYC Boroughs")
ggthemr("fresh")
map_and_pk_and_pop %>%
ggplot(., mapping= aes(x = reorder(borough.y, seats_per_1000, median), y = seats_per_1000, fill = borough.y)) +
geom_boxplot()  +
ylab("Seats per 1000") +
xlab("") +
bbc_style() +
theme(legend.position = "None") +
ggtitle("Seat Distribution Across NYC Boroughs")
ggsave(filename = "boxsplot_seats.png")
nyc_nta_sf
max(nyc_nta_sf$objectid)
nyc_nta_sf %>% arrange(., desc(objectid))
# nyc shape
library(tmap)
tmap(nyc_nta_sf)
tm_shape(nyc_nta_sf) +
tm_polygons()
nyc_tm <- tm_shape(nyc_nta_sf) +
tm_polygons()
save_tmap(tm = nyc_tm, filename = "map_of_nta")
save_tmap(tm = nyc_tm, filename = "map_of_nta.png")
runApp('nyc_pk')
runApp('nyc_pk')
runApp('nyc_pk')
?colorNumeric
pk_ratio_pal <- colorNumeric(
palette = "Greens",
domain = (map_and_pk_and_pop$seats_per_nta / (map_and_pk_and_pop$population/1000))
)
pk_ratio_pal <- colorNumeric(
palette = "Greens",
domain = map_and_pk_and_pop$seats_per_1000
)
count(map_and_pk_and_pop$seats_per_1000)
map_and_pk_and_pop$seats_per_1000 %>% count()
map_and_pk_and_pop$seats_per_1000 # %>% count()
, seats_per_1000 = seats_per_nta / (population / 1000)) %>%
st_as_sf(x = ., sf_column_name = "geometry") # has to be converted back to a spatial form data type
# combine pk school information together with map_and_pop
map_and_pk_and_pop <- inner_join(x = pk_by_nta, y = map_and_pop, by = c("nta" = "nta_name.x")) %>%
mutate(., population = if_else(condition = population == 0, true = 1, false = population), seats_per_1000 = seats_per_nta / (population / 1000)) %>%
st_as_sf(x = ., sf_column_name = "geometry") # has to be converted back to a spatial form data type
pk_ratio_pal <- colorNumeric(
palette = "Greens",
domain = map_and_pk_and_pop$seats_per_1000
)
map_and_pk_and_pop %>%
leaflet() %>%
setView(lat = 40.7128, lng = -74.0060, zoom = 10) %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(stroke = FALSE, smoothFactor = 0.2, fillOpacity = 1,
color = ~pk_ratio_pal(seats_per_1000))%>%
addLegend(data = map_and_pk_and_pop,
position = "topleft",
pal = pk_ratio_pal,
values = ~seats_per_1000,
title = "PK Seats per NTA Population",
opacity = 1)
# combine pk school information together with map_and_pop
map_and_pk_and_pop <- inner_join(x = pk_by_nta, y = map_and_pop, by = c("nta" = "nta_name.x")) %>%
mutate(., seats_per_1000 = if_else(condition = population == 0, true = seats_per_nta, false = seats_per_nta / (population / 1000))) %>%
st_as_sf(x = ., sf_column_name = "geometry") # has to be converted back to a spatial form data type
pk_ratio_pal <- colorNumeric(
palette = "Greens",
domain = map_and_pk_and_pop$seats_per_1000
)
map_and_pk_and_pop %>%
leaflet() %>%
setView(lat = 40.7128, lng = -74.0060, zoom = 10) %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(stroke = FALSE, smoothFactor = 0.2, fillOpacity = 1,
color = ~pk_ratio_pal(seats_per_1000))%>%
addLegend(data = map_and_pk_and_pop,
position = "topleft",
pal = pk_ratio_pal,
values = ~seats_per_1000,
title = "PK Seats per NTA Population",
opacity = 1)
map_and_pk_and_pop %>%
leaflet() %>%
setView(lat = 40.7128, lng = -74.0060, zoom = 10) %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(stroke = FALSE, smoothFactor = 0.2, fillOpacity = 1,
color = ~pk_seats_pal(seats_per_nta))%>%
addLegend(data = map_and_pk_and_pop,
position = "topleft",
pal = pk_seats_pal,
values = ~seats_per_nta,
title = "PK Seats per NTA",
opacity = 1)
map_and_pk_and_pop %>%
leaflet() %>%
setView(lat = 40.7128, lng = -74.0060, zoom = 10) %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(stroke = FALSE, smoothFactor = 0.2, fillOpacity = 1,
color = ~pk_ratio_pal(seats_per_1000))%>%
addLegend(data = map_and_pk_and_pop,
position = "topleft",
pal = pk_ratio_pal,
values = ~seats_per_1000,
title = "PK Seats per 1k Population",
opacity = 1)
map_and_pk_and_pop %>%
leaflet() %>%
setView(lat = 40.7128, lng = -74.0060, zoom = 10) %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(stroke = FALSE, smoothFactor = 0.2, fillOpacity = 1,
color = ~pk_seats_pal(seats_per_nta))%>%
addLegend(data = map_and_pk_and_pop,
position = "topleft",
pal = pk_seats_pal,
values = ~seats_per_nta,
title = "Pre-K Seats per NTA",
opacity = 1)
map_and_pk_and_pop %>%
leaflet() %>%
setView(lat = 40.7128, lng = -74.0060, zoom = 10) %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(stroke = FALSE, smoothFactor = 0.2, fillOpacity = 1,
color = ~pk_ratio_pal(seats_per_1000))%>%
addLegend(data = map_and_pk_and_pop,
position = "topleft",
pal = pk_ratio_pal,
values = ~seats_per_1000,
title = "Pre-K Seats per 1k Population",
opacity = 1)
map_and_pk_and_pop %>%
leaflet() %>%
setView(lat = 40.7128, lng = -74.0060, zoom = 10) %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(stroke = FALSE, smoothFactor = 0.2, fillOpacity = 1,
color = ~pk_ratio_pal(seats_per_1000))%>%
addLegend(data = map_and_pk_and_pop,
position = "topleft",
pal = pk_ratio_pal,
values = ~seats_per_1000,
title = "Pre-K Seats per 1k Population",
opacity = 1)
map_and_pk_and_pop
runApp('nyc_pk')
runApp('nyc_pk')
runApp('nyc_pk')
runApp('nyc_pk')
runApp('nyc_pk')
runApp('nyc_pk')
runApp('nyc_pk')
runApp('nyc_pk')
runApp('nyc_pk')
runApp('nyc_pk')
runApp('nyc_pk')
runApp('nyc_pk')
runApp('nyc_pk')
source('~/Jason/NYC Data Science Academy/projects/shiny/research/scrap_code/example_LL/app.R', echo=TRUE)
getwd()
runApp('nyc_pk')
runApp('nyc_pk')
runApp('nyc_pk')
map_and_pk_and_pop
runApp('nyc_pk')
runApp()
runApp('nyc_pk')
runApp('nyc_pk')
map_and_pk_and_pop %>%
arrange(., seats_per_nta) %>%
top_n(., n=5)
map_and_pk_and_pop %>%
filter(., population > 12000) %>%
arrange(., seats_per_nta) %>%
top_n(., n=5)
?as.character
paste(map_and_pk_and_pop$nta, as.character(map_and_pk_and_pop$seats_per_nta), sep = ": ")
popup = ~paste(nta, as.character(seats_per_nta), sep = ": "),
label = ~~paste(nta, as.character(seats_per_nta), sep = ": "))%>%
addLegend(data = map_and_pk_and_pop,
position = "topleft",
pal = pk_seats_pal,
values = ~seats_per_nta,
title = "Pre-K Seats per NTA",
opacity = 1)
popup = ~paste(nta, as.character(seats_per_nta), sep = ": "),
label = ~paste(nta, as.character(seats_per_nta), sep = ": "))%>%
addLegend(data = map_and_pk_and_pop,
position = "topleft",
pal = pk_seats_pal,
values = ~seats_per_nta,
title = "Pre-K Seats per NTA",
opacity = 1)
popup = ~paste(nta, as.character(seats_per_nta), sep = ": "),
label = ~paste(nta, as.character(seats_per_nta), sep = ": ")) %>%
addLegend(data = map_and_pk_and_pop,
position = "topleft",
pal = pk_seats_pal,
values = ~seats_per_nta,
title = "Pre-K Seats per NTA",
opacity = 1)
map_and_pk_and_pop %>%
leaflet() %>%
setView(lat = 40.7128, lng = -74.0060, zoom = 10) %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(stroke = FALSE, smoothFactor = 0.2, fillOpacity = 1,
color = ~pk_seats_pal(seats_per_nta),
popup = ~paste(nta, as.character(seats_per_nta), sep = ": "),
label = ~paste(nta, as.character(seats_per_nta), sep = ": ")) %>%
addLegend(data = map_and_pk_and_pop,
position = "topleft",
pal = pk_seats_pal,
values = ~seats_per_nta,
title = "Pre-K Seats per NTA",
opacity = 1)
map_and_pk_and_pop %>%
filter(., population > 12000) %>%
arrange(., seats_per_1000) %>%
top_n(., n=5)
map_and_pk_and_pop %>%
filter(., population > 12000) %>%
arrange(., seats_per_1000) %>%
top_n(., n=5) %>%
select(., "NTA Name" = nta, "Borough" = borough.y, "Total Population" = population, "Total Schools" = schl_per_nta,
"Total Seats" = seats_per_nta, "Seats per 1k" = seats_per_1000)
map_and_pk_and_pop %>%
filter(., population > 12000) %>%
arrange(., seats_per_1000) %>%
select(., "NTA Name" = nta, "Borough" = borough.y, "Total Population" = population, "Total Schools" = schl_per_nta,
"Total Seats" = seats_per_nta, "Seats per 1k" = seats_per_1000)
map_and_pk_and_pop %>%
filter(., population > 12000) %>%
arrange(., seats_per_nta) %>%
select(., "NTA Name" = nta, "Borough" = borough.y, "Total Population" = population, "Total Schools" = schl_per_nta,
"Total Seats" = seats_per_nta, "Seats per 1k" = seats_per_1000)
runApp('nyc_pk')
runApp('nyc_pk')
runApp('nyc_pk')
runApp('nyc_pk')
btm <- map_and_pk_and_pop %>%
filter(., population > 12000) %>%
arrange(., seats_per_nta) %>%
select(., "NTA Name" = nta, "Borough" = borough.y, "Total Population" = population, "Total Schools" = schl_per_nta,
"Total Seats" = seats_per_nta, "Seats per 1k" = seats_per_1000)
btm
btm[1:5]
btm[1:5, ]
btm[1:5, ] %>%
leaflet() %>%
setView(lat = 40.7128, lng = -74.0060, zoom = 10) %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(stroke = FALSE, smoothFactor = 0.2, fillOpacity = 1,
color = ~pk_seats_pal(seats_per_nta),
popup = ~paste(nta, as.character(seats_per_nta), sep = ": "),
label = ~paste(nta, as.character(seats_per_nta), sep = ": ")) %>%
addLegend(data = map_and_pk_and_pop,
position = "topleft",
pal = pk_seats_pal,
values = ~seats_per_nta,
title = "Pre-K Seats per NTA",
opacity = 1)
btm[1:5, ] %>%
leaflet(. ) %>%
setView(lat = 40.7128, lng = -74.0060, zoom = 10) %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(stroke = FALSE, smoothFactor = 0.2, fillOpacity = 1,
color = ~pk_seats_pal(seats_per_nta),
popup = ~paste(nta, as.character(seats_per_nta), sep = ": "),
label = ~paste(nta, as.character(seats_per_nta), sep = ": ")) %>%
addLegend(data = map_and_pk_and_pop,
position = "topleft",
pal = pk_seats_pal,
values = ~seats_per_nta,
title = "Pre-K Seats per NTA",
opacity = 1)
st_as_sf(btm[1:5, ], sf_column_name = "geometry") %>%
leaflet(. ) %>%
setView(lat = 40.7128, lng = -74.0060, zoom = 10) %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(stroke = FALSE, smoothFactor = 0.2, fillOpacity = 1,
color = ~pk_seats_pal(seats_per_nta),
popup = ~paste(nta, as.character(seats_per_nta), sep = ": "),
label = ~paste(nta, as.character(seats_per_nta), sep = ": ")) %>%
addLegend(data = map_and_pk_and_pop,
position = "topleft",
pal = pk_seats_pal,
values = ~seats_per_nta,
title = "Pre-K Seats per NTA",
opacity = 1)
new_sf <- st_as_sf(btm[1:5, ], sf_column_name = "geometry")
class(new_sf)
new_sf %>%
leaflet() %>%
setView(lat = 40.7128, lng = -74.0060, zoom = 10) %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(stroke = FALSE, smoothFactor = 0.2, fillOpacity = 1,
color = ~pk_seats_pal(seats_per_nta),
popup = ~paste(nta, as.character(seats_per_nta), sep = ": "),
label = ~paste(nta, as.character(seats_per_nta), sep = ": ")) %>%
addLegend(data = map_and_pk_and_pop,
position = "topleft",
pal = pk_seats_pal,
values = ~seats_per_nta,
title = "Pre-K Seats per NTA",
opacity = 1)
# new_sf %>%
btm[1:5, ] %>%
leaflet() %>%
setView(lat = 40.7128, lng = -74.0060, zoom = 10) %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(stroke = FALSE, smoothFactor = 0.2, fillOpacity = 1,
color = ~pk_seats_pal(seats_per_nta),
popup = ~paste("NTA Name", as.character(seats_per_nta), sep = ": "),
label = ~paste(nta, as.character(seats_per_nta), sep = ": ")) %>%
addLegend(data = map_and_pk_and_pop,
position = "topleft",
pal = pk_seats_pal,
values = ~seats_per_nta,
title = "Pre-K Seats per NTA",
opacity = 1)
btm <- map_and_pk_and_pop %>%
filter(., population > 12000) %>%
arrange(., seats_per_nta) %>%
select(., nta,borough.y, population, schl_per_nta,
seats_per_nta, seats_per_1000)
# new_sf %>%
btm[1:5, ] %>%
leaflet() %>%
setView(lat = 40.7128, lng = -74.0060, zoom = 10) %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(stroke = FALSE, smoothFactor = 0.2, fillOpacity = 1,
color = ~pk_seats_pal(seats_per_nta),
popup = ~paste("NTA Name", as.character(seats_per_nta), sep = ": "),
label = ~paste(nta, as.character(seats_per_nta), sep = ": ")) %>%
addLegend(data = map_and_pk_and_pop,
position = "topleft",
pal = pk_seats_pal,
values = ~seats_per_nta,
title = "Pre-K Seats per NTA",
opacity = 1)
# new_sf %>%
btm[1:5, ] %>%
leaflet() %>%
setView(lat = 40.7128, lng = -74.0060, zoom = 10) %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(stroke = FALSE, smoothFactor = 0.2, fillOpacity = 1,
color = "red",
popup = ~paste("NTA Name", as.character(seats_per_nta), sep = ": "),
label = ~paste(nta, as.character(seats_per_nta), sep = ": ")) %>%
addLegend(data = map_and_pk_and_pop,
position = "topleft",
pal = pk_seats_pal,
values = ~seats_per_nta,
title = "Pre-K Seats per NTA",
opacity = 1)
# new_sf %>%
btm[1:5, ] %>%
leaflet() %>%
setView(lat = 40.7128, lng = -74.0060, zoom = 10) %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(stroke = FALSE, smoothFactor = 0.2, fillOpacity = 1,
color = "red",
popup = ~paste("NTA Name", as.character(seats_per_nta), sep = ": "),
label = ~paste(nta, as.character(seats_per_nta), sep = ": ")) %>%
addLegend(data = map_and_pk_and_pop,
position = "topleft",
pal = pk_seats_pal,
values = ~seats_per_nta,
title = "Pre-K Seats per NTA",
opacity = 1)
class(btm)
class(btm[1:5, ])
runApp('nyc_pk')
2
